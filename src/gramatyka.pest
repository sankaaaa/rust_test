//! # CSV Parser Project
//!
//! Grammar for parsing CSV files. This parser identifies whitespace, line breaks, records, 
//! and fields within a CSV file, including handling quoted and unquoted fields.
//! It is implemented using `pest` and is designed to process CSV files with varying formats.
//!
//! ## Grammar Rules and Descriptions
//!
//! - **WHITESPACE**: Represents spaces, tabs, or line breaks. Used for ignoring irrelevant spaces in the file.
//! - **NEWLINE**: Represents Unix (`\n`) or Windows (`\r\n`) line breaks, marking the end of a CSV record.
//! - **csv**: Main rule for parsing CSV files. Handles optional spaces or newlines before and after records.
//! - **record**: Represents a CSV row, consisting of one or more fields separated by commas.
//! - **field**: Describes a field, which can be empty, quoted, or unquoted.
//! - **empty_field**: Represents an empty field, indicated by a single comma with no value.
//! - **quoted_field**: Represents a field enclosed in quotes, allowing the inclusion of commas or escaped quotes.
//! - **unquoted_field**: Represents a field without quotes, which cannot include commas or line breaks.

/// WHITESPACE represents spaces, tabs, or newlines.
/// It is used to ignore irrelevant spacing within the CSV file.
WHITESPACE = _{ " " | "\t" | "\n" | "\r" }

/// NEWLINE defines line breaks in Unix ("\n") or Windows ("\r\n") style.
/// It marks the end of a record in a CSV file.
NEWLINE = _{ "\n" | "\r\n" }

/// The main rule for parsing a CSV file.
/// Allows optional whitespace or newlines at the beginning and end of the file.
/// Consists of one or more records (`record`), separated by newlines.
/// Permits leading and trailing line breaks.
csv = { (WHITESPACE | NEWLINE)* ~ record ~ (NEWLINE ~ record)* ~ (WHITESPACE | NEWLINE)* }

/// A single CSV record, consisting of one or more fields separated by commas.
/// Each field is parsed according to the `field` rule.
record = { field ~ ("," ~ field)* }

/// Describes a CSV field, which can be empty, quoted, or unquoted.
/// This covers all valid field types in a CSV file.
field = { empty_field | quoted_field | unquoted_field }

/// Represents an empty field, indicated by a single comma with no value.
/// Used when a field is explicitly left blank.
empty_field = _{ "," }

/// Represents a field enclosed in double quotes (`"`).
/// Allows commas or escaped double quotes within the field.
/// For example, `"value with quotes ""inside"""` is parsed as a single field.
/// Double quotes inside the field represent a single quote in the final value.
quoted_field = _{ "\"" ~ (!"\"" ~ ANY | "\"" ~ "\"")* ~ "\"" }

/// Represents a field without quotes, which cannot include commas or line breaks.
/// Accepts all characters except delimiters (`,`), spaces, and `NEWLINE`.
unquoted_field = _{ (!("," | NEWLINE | " ") ~ ANY)+ }

/// quoted_field_with_escape представляє поле з лапками, в якому символи лапок можуть бути екрановані подвійними лапками (для включення лапок в сам текст поля).
/// Наприклад, значення `"This is a ""quoted"" field"` буде розпізнано як `This is a "quoted" field`.
quoted_field_with_escape = _{ "\"" ~ (!"\"" ~ ANY | "\"" ~ "\"")* ~ "\"" }

/// multi_line_field представляє поле, яке може бути багаторядковим. Це поле знаходиться в лапках і може містити нові рядки.
/// Поле продовжується на кілька рядків, поки не зустрінеться закриваюча лапка.
multi_line_field = _{ "\"" ~ (!"\"" ~ ANY | NEWLINE ~ ANY)* ~ "\"" }
